{"ast":null,"code":"import { IUError } from 'src/app/domain/app.domain';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../app-error/app-error.component\";\n\nfunction TimeZoneComponent_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\")(1, \"em\");\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction TimeZoneComponent_app_error_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"app-error\", 5);\n    i0.ɵɵtext(1, \"*ngIf=\\\"iUError.hasError()\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"iUError\", ctx_r1.iUError);\n  }\n}\n\nfunction TimeZoneComponent_table_10_tr_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\")(8, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function TimeZoneComponent_table_10_tr_12_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const i_r5 = restoredCtx.index;\n      const timezone_r4 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r6.GetTime(i_r5, timezone_r4.areaName, timezone_r4.subAreaName, timezone_r4.regionName));\n    });\n    i0.ɵɵtext(9, \"Show time\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const timezone_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", timezone_r4.areaName, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", timezone_r4.subAreaName, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", timezone_r4.regionName, \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", timezone_r4.dateTimeString, \" \");\n  }\n}\n\nfunction TimeZoneComponent_table_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 6)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"Area\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Subarea\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \"Region\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\");\n    i0.ɵɵtext(10, \"Action\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(11, \"tbody\");\n    i0.ɵɵtemplate(12, TimeZoneComponent_table_10_tr_12_Template, 11, 4, \"tr\", 7);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(12);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.timezones);\n  }\n}\n\nexport let TimeZoneComponent = /*#__PURE__*/(() => {\n  class TimeZoneComponent {\n    constructor(http, baseUrl) {\n      this.timezones = [];\n      this.generalTime = \"\";\n      this.http = http;\n      this.baseUrl = baseUrl;\n      this.getList();\n    }\n\n    getList() {\n      this.http.get(this.baseUrl + 'timezone').subscribe(result => {\n        this.timezones = result;\n      }, error => this.GetError(error));\n    }\n\n    GetTime(index, areaName, subAreaName, regionName) {\n      if (this.timezones != null && this.timezones.length > index) {\n        console.log(\"GetTime\" + index + \" \" + areaName + \" \" + subAreaName + region); //Get Url\n\n        var url = 'timezone/GetTime?timeZone=' + areaName;\n        if (subAreaName != '') url = url + '/' + subAreaName;\n        if (regionName != '') url = url + '/' + regionName;\n        this.http.get(this.baseUrl + url).subscribe(result => {\n          this.iuTime = result;\n          this.generalTime = this.iuTime.dateTimeString;\n          this.timezones[index].dateTimeString = this.generalTime;\n        }, error => {\n          console.log(\"url : \" + url);\n          this.GetError(error);\n        });\n      }\n    }\n\n    GetAllTimes() {\n      this.timezones.forEach((timezone, index) => {\n        this.GetTime(index, timezone.areaName, timezone.subAreaName, timezone.regionName);\n      });\n    }\n\n    GetError(error) {\n      console.error(error);\n      this.iUError = new IUError(error);\n    }\n\n  }\n\n  TimeZoneComponent.ɵfac = function TimeZoneComponent_Factory(t) {\n    return new (t || TimeZoneComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'));\n  };\n\n  TimeZoneComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TimeZoneComponent,\n    selectors: [[\"time-zone\"]],\n    decls: 11,\n    vars: 3,\n    consts: [[\"id\", \"tableLabel\"], [4, \"ngIf\"], [3, \"iUError\", 4, \"ngIf\"], [\"type\", \"button\", 3, \"click\"], [\"class\", \"table table-striped\", \"aria-labelledby\", \"tableLabel\", 4, \"ngIf\"], [3, \"iUError\"], [\"aria-labelledby\", \"tableLabel\", 1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function TimeZoneComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\", 0);\n        i0.ɵɵtext(1, \"Time zones\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(2, TimeZoneComponent_p_2_Template, 3, 0, \"p\", 1);\n        i0.ɵɵtemplate(3, TimeZoneComponent_app_error_3_Template, 2, 1, \"app-error\", 2);\n        i0.ɵɵelementStart(4, \"div\")(5, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function TimeZoneComponent_Template_button_click_5_listener() {\n          return ctx.GetTime(100, \"\", \"\", \"\");\n        });\n        i0.ɵɵtext(6, \"Show error\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\")(8, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function TimeZoneComponent_Template_button_click_8_listener() {\n          return ctx.GetAllTimes();\n        });\n        i0.ɵɵtext(9, \"Show all times\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(10, TimeZoneComponent_table_10_Template, 13, 1, \"table\", 4);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.timezones);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.iUError && ctx.iUError.hasError());\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.timezones);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.AppErrorComponent],\n    encapsulation: 2\n  });\n  return TimeZoneComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}